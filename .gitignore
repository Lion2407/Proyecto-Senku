#include <iostream>
using namespace std;


const int MaxDimensiones1 = 7;
const int MaxDimensiones2 = 9;

void llena1(int v[][MaxDimensiones1]) {

    for (int i = 0; i < MaxDimensiones1; ++i) {

        for (int j = 0; j < MaxDimensiones1; ++j) {
            if((i==0 && j==0)|| (i==0 && j==1) || (i==0 && j==5) || (i==0 && j==6) || (i==1 && j==0) || (i==1 && j==1) || (i==1 && j==5) || (i==1 && j==6) || (i==5 && j==0) || (i==5 && j==1) || (i==5 && j==5) || (i==5 && j==6) || (i==6 && j==0) || (i==6 && j==1) || (i==6 && j==5) || (i==6 && j==6))
                v[i][j]=1;
            else if(i==3 && j==3)
                v[i][j]=2;
            else
                v[i][j]=0;
        }

    }
}
void muestra1(int v[][MaxDimensiones1]) {
    for (int i = 0; i < MaxDimensiones1; ++i) {
        for (int j = 0; j < MaxDimensiones1; ++j) {
            if (v[i][j]==1)
                cout << " "<< " ";
            else if(v[i][j]==2)
                cout << "+" << " ";
            else
                cout << v[i][j]<< " ";
        }
        cout<<endl;
    }
}

void llena2(int v[][MaxDimensiones2]) {

    for (int i = 0; i < MaxDimensiones2; ++i) {

        for (int j = 0; j < MaxDimensiones2; ++j) {
            if((i<3 && j==0)|| (i>5 && j==0) || (i<3 && j==1)|| (i>5 && j==1) || (i<3 && j==2)|| (i>5 && j==2) || (i<3 && j==6)|| (i>5 && j==6) || (i<3 && j==7)|| (i>5 && j==7) || (i<3 && j==8)|| (i>5 && j==8)  )
                v[i][j]=1;
            else if(i==4 && j==4)
                v[i][j]=2;
            else
                v[i][j]=0;
        }

    }
}
void muestra2(int v[][MaxDimensiones2]) {
    for (int i = 0; i < MaxDimensiones2; ++i) {
        for (int j = 0; j < MaxDimensiones2; ++j) {
            if (v[i][j]==1)
                cout << " "<< " ";
            else if(v[i][j]==2)
                cout << "+" << " ";
            else
                cout << v[i][j]<< " ";
        }
        cout<<endl;
    }
}

void llena3(int v[][MaxDimensiones1]) {

    for (int i = 0; i < MaxDimensiones1; ++i) {

        for (int j = 0; j < MaxDimensiones1; ++j) {
            if((i==0 && j==0)|| (i==0 && j==1) || (i==0 && j==5) || (i==0 && j==6) || (i==1 && j==0)  || (i==1 && j==6) || (i==5 && j==0) || (i==5 && j==6) || (i==6 && j==0) || (i==6 && j==1) || (i==6 && j==5) || (i==6 && j==6))
                v[i][j]=1;
            else if(i==2 && j==3)
                v[i][j]=2;
            else
                v[i][j]=0;
        }

    }
}




void mover1(int v[][MaxDimensiones1], int fila0 ,int columna0, int fila1, int columna1 )
{ if(fila0-fila1==0 && columna0-columna1==2 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2)  {
        v[fila0][columna0] = 2;
        v[fila0][columna0-1] = 2;
        v[fila1][columna1] = 0;
    }
    else if(fila0-fila1==0 && columna0-columna1==-2 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0][columna0+1] = 2;
        v[fila1][columna1] = 0;
    }

    else if(fila0-fila1==2 && columna0-columna1==0 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0-1][columna0] = 2;
        v[fila1][columna1] = 0;
    }

    else if(fila0-fila1==-2 && columna0-columna1==0 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0+1][columna0] = 2;
        v[fila1][columna1] = 0;
    }
    else
        cout<<"Coordenadas incorrectas"<<endl;




}

void mover2(int v[][MaxDimensiones2], int fila0 ,int columna0, int fila1, int columna1 )
{ if(fila0-fila1==0 && columna0-columna1==2 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2)  {
        v[fila0][columna0] = 2;
        v[fila0][columna0-1] = 2;
        v[fila1][columna1] = 0;
    }
    else if(fila0-fila1==0 && columna0-columna1==-2 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0][columna0+1] = 2;
        v[fila1][columna1] = 0;
    }

    else if(fila0-fila1==2 && columna0-columna1==0 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0-1][columna0] = 2;
        v[fila1][columna1] = 0;
    }

    else if(fila0-fila1==-2 && columna0-columna1==0 && v[fila0][columna0] == 0 && v[fila1][columna1] == 2) {
        v[fila0][columna0] = 2;
        v[fila0+1][columna0] = 2;
        v[fila1][columna1] = 0;
    }
    else
        cout<<"Coordenadas incorrectas"<<endl;




}

int validar1(int v[][MaxDimensiones1])
{
    int sw=0;
    for (int i = 0; i < MaxDimensiones1; ++i) {
        for (int j = 0; j < MaxDimensiones1; ++j) {
            if ((v[i][j]==0 && v[i][j-1]==0 && v[i][j-2]==2) || (v[i][j]==0 && v[i][j+1]==0 && v[i][j+2]==2) || (v[i][j]==0 && v[i-1][j]==0 && v[i-2][j]==2) || (v[i][j]==0 && v[i+1][j]==0 && v[i+2][j]==2))
                sw =1;
        }
    }
    return sw;
}

int validar2(int v[][MaxDimensiones2])
{
    int sw=0;
    for (int i = 0; i < MaxDimensiones2; ++i) {
        for (int j = 0; j < MaxDimensiones2; ++j) {
            if ((v[i][j]==0 && v[i][j-1]==0 && v[i][j-2]==2) || (v[i][j]==0 && v[i][j+1]==0 && v[i][j+2]==2) || (v[i][j]==0 && v[i-1][j]==0 && v[i-2][j]==2) || (v[i][j]==0 && v[i+1][j]==0 && v[i+2][j]==2))
                sw =1;
        }
    }
    return sw;
}


int resultado1(int v[][MaxDimensiones1])
{
    int r=0;
    for (int i = 0; i < MaxDimensiones1; ++i) {
        for (int j = 0; j < MaxDimensiones1; ++j) {
            if (v[i][j]==0)
            r++;

        }
    }
    return r;
}

int resultado2(int v[][MaxDimensiones2])
{
    int r=0;
    for (int i = 0; i < MaxDimensiones2; ++i) {
        for (int j = 0; j < MaxDimensiones2; ++j) {
            if (v[i][j]==0)
                r++;

        }
    }
    return r;
}






int main() {
    int opcion;
    cout<<"Menu - Juego Senku"<<endl;
    cout<<"1.Estilo ingles"<<endl;
    cout<<"2.Estilo aleman"<<endl;
    cout<<"3.Estilo frances"<<endl;
    cout<<"0.Salir del programa"<<endl;
    cout<<"Seleccionar la opcion: "<<endl;
    cin>>opcion;
    switch(opcion)  {
        case 1: int v1[MaxDimensiones1][MaxDimensiones1];
            llena1(v1);
            muestra1(v1);
            int fila1;
            int columna1;
            int fila0;
            int columna0;


            while(validar1(v1)==1) {
                cout << "Ingrese la posicion de origen (fila, columna): "<< endl;
                cin >> fila0 >> columna0;
                cout << "Ingrese la posicion de fin (fila, columna): "<< endl;
                cin >> fila1 >> columna1;

                mover1( v1, fila0-1 ,columna0-1, fila1-1, columna1-1 );
                muestra1(v1);



            }
            if(resultado1(v1)==1)
                cout<<"Ganaste"<<endl;
            else if(resultado1(v1)>1)
                cout<<"Perdiste"<<endl;
            break;

        case 2: int v2[MaxDimensiones2][MaxDimensiones2];
            llena2(v2);
            muestra2(v2);
            int fila3;
            int columna3;
            int fila2;
            int columna2;

            while(validar2(v2)==1) {
                cout << "Ingrese la posicion de origen (fila, columna): "<< endl;
                cin >> fila2 >> columna2;
                cout << "Ingrese la posicion de fin (fila, columna): "<< endl;
                cin >> fila3 >> columna3;

                mover2( v2, fila2-1 ,columna2-1, fila3-1, columna3-1 );
                muestra2(v2);



            }
            if(resultado2(v2)==1)
                cout<<"Ganaste"<<endl;
            else if(resultado2(v2)>1)
                cout<<"Perdiste"<<endl;
            break;
        case 3: int v3[MaxDimensiones1][MaxDimensiones1];
            llena3(v3);
            muestra1(v3);
            int fila5;
            int columna5;
            int fila4;
            int columna4;


            while(validar1(v3)==1) {
                cout << "Ingrese la posicion de origen (fila, columna): "<< endl;
                cin >> fila4 >> columna4;
                cout << "Ingrese la posicion de fin (fila, columna): "<< endl;
                cin >> fila5 >> columna5;

                mover1( v3, fila4-1 ,columna4-1, fila5-1, columna5-1 );
                muestra1(v3);



            }
            if(resultado1(v3)==1)
                cout<<"Ganaste"<<endl;
            else if(resultado1(v3)>1)
                cout<<"Perdiste"<<endl;
            break;




    }

}
